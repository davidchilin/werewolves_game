# This is the configuration for your main application server block
server {
    listen 80;
    # IMPORTANT: Replace this with your actual domain name
    server_name localhost 127.0.0.1 "";

    # Optional: Add logs for debugging
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;

    # Location block for standard HTTP requests
    location / {
        # Forward requests to the 'app' service defined in docker-compose.yml
        proxy_pass http://app:5000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }

    # Location block specifically for Socket.IO
    # This is crucial for real-time communication to work
    location /socket.io {
        # Forward requests to the 'app' service
        proxy_pass http://app:5000/socket.io;

        # Set necessary headers for WebSocket connections
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";
        proxy_set_header Host $host;
    }

    # --- SSL/HTTPS Configuration (Let's Encrypt) ---
    # To enable HTTPS, you would:
    # 1. Use a tool like Certbot to get SSL certificates for your domain.
    # 2. Uncomment the following lines and update the paths.
    # 3. Change the `listen` directive above to `listen 443 ssl;`
    # 4. Add a new server block to redirect HTTP to HTTPS.

    # ssl_certificate /etc/letsencrypt/live/your-game-domain.com/fullchain.pem;
    # ssl_certificate_key /etc/letsencrypt/live/your-game-domain.com/privkey.pem;
    # include /etc/letsencrypt/options-ssl-nginx.conf;
    # ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;
}

# Optional: Add this server block to redirect all HTTP traffic to HTTPS
# server {
#    listen 80;
#    server_name your-game-domain.com;
#    return 301 https://$host$request_uri;
# }

